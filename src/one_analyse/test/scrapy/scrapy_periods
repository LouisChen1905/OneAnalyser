#!/usr/bin/env python
# -*- coding: utf-8 -*-

'''
Created on 2016年3月25日

@author: chensi
'''
import requests
from lxml import html
from threadpool import ThreadPool, makeRequests

good_detail_url = "http://1.163.com/detail/%d-%d.html"

def request_period_html(gid, pid):
    global good_detail_url
    url = good_detail_url % (gid, pid)
    response = requests.get(url)
    doc = html.fromstring(response.text)
    try:
        luck_code = doc.cssselect(".code")[0]
        nick_name = doc.cssselect(".bd > a")[0]
        user_id = int(doc.cssselect("div.user-id > span:last-of-type")[0].text.split("（")[0])
        num = int(doc.cssselect("div.user-buyTimes > span:last-of-type")[0].text.split("人次")[0])
        calc_time = doc.cssselect("div.published-time > span.bd")[0].text
        buy_time = doc.csselect("div.buy-time > span.bd")[0].text
        print("period id : %d, luck code : %s, user id : %d, user nick name : %s,\tnum : %d"
              % (pid, luck_code.text, user_id, nick_name.text, num))

    except IndexError as e:
        # print("Invalid gid or pid!")
        pass

if __name__ == '__main__':

    # Initialize thread pool
    tp = ThreadPool(50)
    # good is Apple MacBook Air
    gid = 424
    data = []
    pid = first_pid = 302201602
    last_pid = 302200602
    group_count = 0
    while pid > last_pid:
        data.append(([gid, pid], []))
        pid -= 1
        group_count += 1
        if group_count == 25:
            thread_requests = makeRequests(request_period_html, data)
            [tp.putRequest(req) for req in thread_requests]
            group_count = 0
            data.clear()
    # thread_requests = makeRequests(request_period_html, data)
    # [tp.putRequest(req) for req in thread_requests]
    tp.wait()